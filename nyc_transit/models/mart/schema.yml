models:
  - name: mart__dim_bike_stations
    description: "bike stations with name, latitude and longitude"
    columns:
      - name: station_id
        description: "bike station id, primary key"
        tests:
              - unique

      - name: station_name
        description: "bike station name"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: VARCHAR

      - name: station_lat
        description: "station latitude"
        tests: 
          - dbt_expectations.expect_column_to_exist 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
          - not_null

      - name: station_lng
        description: "station longitude"
        tests: 
          - dbt_expectations.expect_column_to_exist 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
          - not_null

  - name: mart__dim_locations
    description: "taxi locations, used to join with pulocationid and dolocationid,
      taken from dbt seed. Not tested as data is small enough to check visually, as should be the case with use of seeds"
    columns:
      - name: locationid
        description: "primary key"
        tests:
          - unique
          - not_null

      - name: borough
        description: "A borough contains several zones"
        tests:
          - dbt_expectations.expect_column_to_exist 
          - not_null

      - name: zone
        description: "the zone name of the locationid"
        tests:
          - dbt_expectations.expect_column_to_exist 
          - not_null

      - name: service_zone
        description: "A service zone contains several boroughs"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null

  - name: mart__fact_all_bike_trips
    description: "bike trip data normalised with station data stripped out to dim"
    columns:
      - name: started_at_ts
        description: "starting timestamp"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP

      - name: ended_at_ts
        description: "ending timestamp"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP

      - name: duration_min
        description: "duration in minutes"
        tests: 
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: duration_sec
        description: "duration in seconds"
        tests: 
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: start_station_id
        description: "start station id"
        tests: 
          - not_null

      - name: end_station_id
        description: "end station id"
        tests: 
          - not_null

  - name: mart__fact_all_taxi_trips
    description: "all taxi trip data for analysis"
    columns:
      - name: type
        description: "type of trips"
        tests:
          - accepted_values:
                values: ['fhv','fhvhv','green','yellow']
          - not_null

      - name: pickup_datetime
        description: "pickup timestamp"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP
          - dbt_expectations.expect_column_to_exist
          - not_null

      - name: dropoff_datetime
        description: "dropoff timestamp"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP
          - dbt_expectations.expect_column_to_exist
          - not_null

      - name: duration_min
        description: "trip duration in minutes"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_to_exist
          - not_null

      - name: duration_sec
        description: "trip duration in seconds"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_to_exist
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

      - name: pulocationid
        description: "pickup location id"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
          - dbt_expectations.expect_column_to_exist
          - not_null

      - name: dolocationid
        description: "dropoff location id"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: DOUBLE
          - dbt_expectations.expect_column_to_exist
          - not_null

  - name: mart__fact_all_trips_daily
    description: "all trips including bikes and taxis grouped by day, with averaged trip duration"
    columns:
      - name: type
        description: "type of trips"
        tests:
          - accepted_values:
                values: ['fhv','fhvhv','green','yellow','bike']
          - not_null

      - name: date
        description: "date of trip"
        tests:
          - not_null

      - name: trips
        description: "number of trips in each date"
        tests:
          - dbt_expectations.expect_column_to_exist

      - name: average_trip_duration_min
        description: "average trip duration in minutes in each date"
        tests:
          - dbt_expectations.expect_column_to_exist

  - name: mart__fact_all_trips
    description: "all trips including bikes and taxis with duration"
    columns:
      - name: type
        description: "type of trips"
        tests:
          - accepted_values:
                values: ['fhv','fhvhv','green','yellow','bike']
          - not_null

      - name: started_at_ts
        description: "start timestamp"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP

      - name: ended_at_ts
        description: "end timestamp"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: TIMESTAMP

      - name: duration_min
        description: "duration in minutes"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_to_exist
          - not_null


      - name: duration_sec
        description: "duration in seconds"
        tests: 
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT
          - dbt_expectations.expect_column_to_exist
          - not_null